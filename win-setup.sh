#!/usr/bin/env bash

cmd <<<'mklink /D %homepath%\.ssh Z:\.ssh' >/dev/null
cmd <<<'mklink %homepath%\.bash_profile_default %homepath%\dotfiles\.bash_profile_default' >/dev/null

cat <<EOF >~/.bash_profile
# generated by ~/dotfiles/win-setup.sh
test -f ~/.profile && . ~/.profile
test -f ~/.bashrc && . ~/.bashrc

source ~/dotfiles/scripts/win/fix_docker.sh
export PATH="$PATH:/c/Program Files/StaxRip/Apps/Encoders/ffmpeg"

EOF

cat <<EOF >~/.bashrc
# generated by ~/dotfiles/win-setup.sh
[[ $- == *i* ]] || return
source ~/.bash_profile_default
source ~/dotfiles/light-setup.sh
source ~/dotfiles/auto-ssh-agent.sh

EOF

if ! hash scoop 2>/dev/null; then
    echo 'Installing scoop...'
    powershell -Command 'Set-ExecutionPolicy RemoteSigned -scope CurrentUser; iex (new-object net.webclient).downloadstring("https://get.scoop.sh")'
    scoop update
fi

if ! hash shfmt 2>/dev/null; then
    scoop install shfmt
fi

if ! hash shellcheck 2>/dev/null; then
    scoop install shellcheck
fi

if ! hash make 2>/dev/null; then
    scoop install make
fi

if ! hash telnet 2>/dev/null; then
    scoop install telnet
fi

if ! hash pngcrush 2>/dev/null; then
    # pngcrush -rem gAMA -rem cHRM -rem iCCP -rem sRGB infile.png outfile.png
    scoop install pngcrush
fi

if ! hash terraform 2>/dev/null; then
    scoop install terraform
fi

# if ! hash rsync 2>/dev/null; then
#     scoop install ../scripts/win/rsync-via-git.json
# fi

if ! hash python 2>/dev/null; then
    scoop install python
    pip install --upgrade pip
fi

if ! hash pre-commit 2>/dev/null; then
    pip install pre-commit
fi
