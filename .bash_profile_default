#!/usr/bin/env bash
# shellcheck disable=SC2002
shopt -s extglob

source ~/.profile_default

# Bash only

export PS1="\[\033[36m\]\u\[\033[m\]@\[\033[34m\]\h:\[\033[0;36m\]\w\[\033[m\] \[\033[0;37m\]\$ "
# export LSCOLORS=GxFxCxDxBxegedabagaced
# export PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

if [ ! "${OSTYPE#msys}" != "$OSTYPE" ]; then
    if [ ! -f /etc/bash_completion.d/git-completion.bash ] && [ ! -f "$(brew --prefix)/etc/bash_completion" ]; then
        sudo curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash -o /etc/bash_completion.d/git-completion.bash
    fi
elif [ "${OSTYPE#darwin}" != "$OSTYPE" ]; then
    if [ -f "$(brew --prefix)/etc/bash_completion" ]; then
        # shellcheck source=/dev/null
        source "$(brew --prefix)/etc/bash_completion"
    fi
elif [ -f /etc/bash_completion ]; then
    # shellcheck source=/dev/null
    source /etc/bash_completion
fi

if [ -d "/opt/kubectx/completion" ]; then
    # shellcheck source=/dev/null
    source "/opt/kubectx/completion/kubectx.bash"
    # shellcheck source=/dev/null
    source "/opt/kubectx/completion/kubens.bash"
fi

_complete_ssh_hosts() {
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD - 1]}"
    opts=$(grep '^Host' ~/.ssh/config ~/.ssh/config.d/* 2>/dev/null | grep -v '[?*]' | cut -d ' ' -f 2-)

    COMPREPLY=($(compgen -W "$opts" -- ${cur}))
    return 0
}
complete -F _complete_ssh_hosts ssh

## how to find what eats space
# ncdu

## find orphaned file descriptors
# lsof | grep "/var" | grep deleted

## extended trace route monitoring for packet loss detection
# mtr

## Check diskspace and if less then 50G
# if [ $(df -BG / | tail -1 | awk '{print $4}' | sed -En 's/^([0-9]+).*/\1/p') -lt 50 ]; then echo yes; fi

## Singleton rsync with speed limit to /remote/dir/projects
# flock -x -n -w 3500 /tmp/projects_sync timeout -k 9 1h rsync -rav --exclude='directory' --bwlimit=25000 --delete /home/test/projects /remote/dir

## Multiline sed
# sed -i.bak -E \
#     -e '/<logger name="com.googlecode.flyway">/ {' \
#     -e 'n; s/<level value=".*" \/>/<level value="INFO" \/>/' \
#     -e '}' \
#     file.xml

## Check OS Type
# if [ "${OSTYPE#darwin}" != "$OSTYPE" ]; then echo 1; fi

## Key value dict in bash 4.x
# declare -A config
# config["key"]="value"

# for key in ${!config[@]}; do
#     val=${config["$key"]}
#     echo "$key=$value"
# done
