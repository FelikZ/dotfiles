#!/bin/bash

shopt -s extglob

if [ "$BASH_SOURCE" != "" ]
then
    DIR="$( cd "$( dirname "$BASH_SOURCE" )" && pwd )"
elif [ "$DASH_SOURCE" != "" ]
then
    DIR="$( cd "$( dirname "$DASH_SOURCE" )" && pwd )"
else
    DIR="$( cd "$( dirname "$0" )" && pwd )"
fi

# PATH
export PATH="$PATH:./node_modules/.bin"

# lang
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# colors
export CLICOLOR=1
export TERM=xterm-256color
export LSCOLORS=cxGxBxDxCxEgEdxbxgxccA
export PS1="\[\033[36m\]\u\[\033[m\]@\[\033[34m\]\h:\[\033[0;36m\]\w\[\033[m\] \[\033[0;37m\]\$ "
# export LSCOLORS=GxFxCxDxBxegedabagaced
# export PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

# Ubuntu dropbox fix
# eval `dbus-launch`
export DBUS_SESSION_BUS_ADDRESS="/dev/null"

# vim solarized fix
# printf '\x1B]4;234;rgb:00/2b/36;235;rgb:07/36/42;240;rgb:58/6e/75;241;rgb:65/7b/83;244;rgb:83/94/96;245;rgb:93/a1/a1;254;rgb:ee/e8/d5;230;rgb:fd/f6/e3;136;rgb:b5/89/00;166;rgb:cb/4b/16;160;rgb:dc/32/2f;125;rgb:d3/36/82;61;rgb:6c/71/c4;33;rgb:26/8b/d2;37;rgb:2a/a1/98;64;rgb:85/99/00\a'

if [ hash dircolors 2>/dev/null ]; then
    eval `dircolors "$DIR/.dircolors"`
fi

if [ ! -z "${TMUX_PANE}" ]; then
    ssh() {
        tmux rename-window -t${TMUX_PANE} "$*"
        command ssh "$@"
        tmux rename-window -t${TMUX_PANE} "bash"
    }
fi

_ssh_auth_save() {
    ln -sf "$SSH_AUTH_SOCK" "$HOME/ssh-auth-sock.$HOSTNAME"
}
_ssh_fix_env() {
    eval $(tmux show-environment -t 0 | grep '^SSH_AUTH_SOCK')
}

# aliases
alias git-clean='git pull -p && git branch --merged | grep -Ev "\*.*?|master" | xargs -n 1 git branch -d'
alias git-clean-remote='git branch -r --merged | grep -v master | sed "s/origin\///" | xargs -n 1 git push --delete origin'
alias git-remote-authors='git for-each-ref --format="%(committerdate) %09 %(authorname) %09 %(refname)" | sort -k5n -k2M -k3n -k4n'
alias git-clone-branch='echo "git clone -b <branch> --single-branch <url> --depth <number of commits>"'
alias git-remote-branches='for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format="%ci %cr" $branch | head -n 1` \\t$branch; done | sort -r'
alias docker-rm-images='docker rmi $(docker images --filter "dangling=true" -q --no-trunc)'
alias docker-rm-containers='docker rm $(docker ps -qa --no-trunc --filter "status=exited")'
alias docker-rm-volumes='docker volume rm $(docker volume ls -qf "dangling=true")'
alias docker-clean='docker-rm-containers; docker-rm-images; docker-rm-volumes'
# docker-heal
# /var/lib/docker/devicemapper/ext
# find /proc/*/mounts | xargs grep -E "01fac2f"
# kill -9 ids
alias screen='export HOSTNAME=$(hostname) ; _ssh_auth_save ; screen'
alias tmux='export HOSTNAME=$(hostname) ;_ssh_auth_save ; tmux'
alias lock='sleep 2 && xtrlock'
alias json='python -mjson.tool'
date-cmd() {
    $@ | while read pong; do echo "$(date '+%Y-%m-%d %H:%M:%S (%:z)'): $pong"; done
}

alias bench-disk='fio --randrepeat=1 --ioengine=libaio --direct=1 --gtod_reduce=1 --name=test --filename=test --bs=4k --iodepth=64 --size=4G --readwrite=randrw --rwmixread=75'

# https://github.com/ahmetb/kubectx
if ! hash kubens 2>/dev/null; then
    echo 'Installing kubens'
    if hash brew 2>/dev/null; then
        brew install kubectx
    else
        set -e
        sudo bash --noprofile --norc -ci 'cd /opt ; git clone https://github.com/ahmetb/kubectx'
        sudo bash --noprofile --norc -ci 'cd /opt/kubectx; git checkout f986c148b25b04ae282378f1c4ef3df3fe738628'
        sudo ln -sf /opt/kubectx/kubectx /usr/local/bin/kubectx
        sudo ln -sf /opt/kubectx/kubens /usr/local/bin/kubens
        set +e
    fi
fi
if [ -d "/opt/kubectx/completion" ]; then
    source "/opt/kubectx/completion/kubectx.bash"
    source "/opt/kubectx/completion/kubens.bash"
fi

## how to find what eats space
# ncdu

## find orphaned file descriptors
# lsof | grep "/var" | grep deleted

## extended trace route monitoring for packet loss detection
# mtr

## Check diskspace and if less then 50G
# if [ $(df -BG / | tail -1 | awk '{print $4}' | sed -En 's/^([0-9]+).*/\1/p') -lt 50 ]; then echo yes; fi

## Singleton rsync with speed limit to /remote/dir/projects
# flock -x -n -w 3500 /tmp/projects_sync timeout -k 9 1h rsync -rav --exclude='directory' --bwlimit=25000 --delete /home/test/projects /remote/dir

if hash brew 2>/dev/null && [ ! -f "$(brew --prefix)/etc/bash_completion" ]; then
    brew install bash-completion
    brew reinstall git
fi

if hash brew 2>/dev/null && [ -f "$(brew --prefix)/etc/bash_completion" ]; then
    source "$(brew --prefix)/etc/bash_completion"
fi

if [ ! -f /etc/bash_completion.d/git-completion.bash ] && [ ! -f $(brew --prefix)/etc/bash_completion ]; then
    sudo curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash -o /etc/bash_completion.d/git-completion.bash
fi

if [ -f /etc/bash_completion ]; then
    source /etc/bash_completion
fi

_complete_ssh_hosts ()
{
        COMPREPLY=()
        cur="${COMP_WORDS[COMP_CWORD]}"
        comp_ssh_hosts=`cat ~/.ssh/known_hosts | \
                        cut -f 1 -d ' ' | \
                        sed -e s/,.*//g | \
                        grep -v ^# | \
                        uniq | \
                        grep -v "\[" ;
                cat ~/.ssh/config | \
                        grep "^Host " | \
                        awk '{print $2}'
                `
        COMPREPLY=( $(compgen -W "${comp_ssh_hosts}" -- $cur))
        return 0
}
complete -F _complete_ssh_hosts ssh

if [ ! -d ~/.tmux/plugins/tpm ]; then
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
fi
